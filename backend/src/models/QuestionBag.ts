/**
 * QuestionBag Model
 * 
 * This model represents a GMAT question in the database.
 * It contains the question text, options, correct answer, explanation,
 * and metadata such as type, difficulty, category, and tags.
 * 
 * Additionally, it stores AI-generated answers and explanations when they are available.
 */

import mongoose, { Document, Schema } from 'mongoose';

/**
 * Interface defining the structure of a QuestionBag document
 * 
 * @property questionText - The text of the GMAT question
 * @property questionType - The type of question (Multiple Choice, Critical Reasoning, etc.)
 * @property subType - Optional subtype for more specific categorization
 * @property options - Array of answer options (A, B, C, D, E)
 * @property correctAnswer - The letter of the correct answer (A-E)
 * @property explanation - Explanation of why the correct answer is correct
 * @property difficulty - Difficulty rating (can be string or number)
 * @property category - Subject category of the question
 * @property tags - Array of tags for filtering and categorization
 * @property paragraph - Optional text for reading comprehension passages or data insights content
 * @property AI_generated_correct_answer - Answer generated by OpenAI
 * @property AI_generated_explanation - Explanation generated by OpenAI
 * @property createdAt - Timestamp when question was created
 * @property updatedAt - Timestamp when question was last updated
 */
export interface IQuestionBag extends Document {
  questionText: string;
  questionType: 'Multiple Choice' | 'Critical Reasoning' | 'Reading Comprehension';
  subType?: string;
  options: string[];
  correctAnswer: string;
  explanation: string;
  difficulty: string | number;
  category: string;
  tags: string[];
  paragraph?: string;
  AI_generated_correct_answer?: string;
  AI_generated_explanation?: string;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Mongoose schema for the QuestionBag model
 * 
 * Defines fields, validation, and indexes for efficient queries
 */
const QuestionBagSchema = new Schema<IQuestionBag>(
  {
    questionText: { type: String },
    questionType: {
      type: String,
      enum: ['Multiple Choice', 'Critical Reasoning', 'Reading Comprehension']
    },
    subType: { type: String },
    options: [{ type: String }],
    correctAnswer: { type: String },
    explanation: { type: String },
    difficulty: { type: Schema.Types.Mixed },
    category: { type: String },
    tags: [{ type: String }],
    paragraph: { type: String },
    AI_generated_correct_answer: { type: String },
    AI_generated_explanation: { type: String }
  },
  {
    timestamps: true  // Automatically add createdAt and updatedAt timestamps
  }
);

// Create indexes for better query performance
QuestionBagSchema.index({ questionType: 1 });  // Index for filtering by question type
QuestionBagSchema.index({ difficulty: 1 });    // Index for filtering by difficulty
QuestionBagSchema.index({ category: 1 });      // Index for filtering by category
QuestionBagSchema.index({ tags: 1 });          // Index for filtering by tags

/**
 * The QuestionBag model for interacting with the questions collection in MongoDB
 * 
 * Used for CRUD operations on GMAT questions
 */
export const QuestionBag = mongoose.model<IQuestionBag>('QuestionBag', QuestionBagSchema); 